<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Put site-specific property overrides in this file. -->

<configuration>

<property>
<name>local.realm</name>
<value>KERBEROS.EXAMPLE.COM</value>
</property>

<!-- file system properties -->

<property>
<name>fs.default.name</name>
<value>hdfs://<%= @namenode %>:8020</value>
<description>The name of the default file system. Either the
literal string "local" or a host:port for NDFS.
</description>
<final>true</final>
</property>

<property>
<name>fs.trash.interval</name>
<value><%= node.hadoop_attrib(:core, :fs_trash_interval) %></value>
<description>Number of minutes between trash checkpoints.
If zero, the trash feature is disabled.
</description>
</property>

<property>
<name>hadoop.security.auth_to_local</name>
<value>
RULE:[2:$1@$0]([jt]t@.*KERBEROS.EXAMPLE.COM)s/.*/mr/
RULE:[2:$1@$0]([nd]n@.*KERBEROS.EXAMPLE.COM)s/.*/hdfs/
RULE:[2:$1@$0](mapred@.*KERBEROS.EXAMPLE.COM)s/.*/mr/
RULE:[2:$1@$0](hdfs@.*KERBEROS.EXAMPLE.COM)s/.*/hdfs/
RULE:[2:$1@$0](mapredqa@.*KERBEROS.EXAMPLE.COM)s/.*/mr/
RULE:[2:$1@$0](hdfsqa@.*KERBEROS.EXAMPLE.COM)s/.*/hdfs/
RULE:[2:$1@$0](hm@.*KERBEROS.EXAMPLE.COM)s/.*/hbase/
RULE:[2:$1@$0](rs@.*KERBEROS.EXAMPLE.COM)s/.*/hbase/
DEFAULT
</value>
<description></description>
</property>

<property>
<name>hadoop.security.authentication</name>
<value>simple</value>
<description>
Set the authentication for the cluster. Valid values are: simple or
kerberos.
</description>
</property>

<property>
<name>hadoop.security.authorization</name>
<value>false</value>
<description>
Enable authorization for different protocols.
</description>
</property>

<property>
<name>hadoop.security.groups.cache.secs</name>
<value>14400</value>
</property>

<property>
<name>hadoop.kerberos.kinit.command</name>
<value>/usr/kerberos/bin/kinit</value>
</property>

<property>
<name>hadoop.http.filter.initializers</name>
<value>org.apache.hadoop.http.lib.StaticUserWebFilter</value>
</property>

<property>
<name>io.file.buffer.size</name>
<value><%= node.hadoop_attrib(:core, :io_file_buffer_size) %></value>
</property>

<property>
<name>fs.checkpoint.dir</name>
<value><%= node.hadoop_attrib(:core, :fs_checkpoint_dir) %></value>
</property>

<property>
<name>fs.checkpoint.period</name>
<value><%= node.hadoop_attrib(:core, :fs_checkpoint_period) %></value>
</property>


<property>
<name>hadoop.proxyuser.<%= node.hadoop_attrib(:mapred, :cluster_administrators) %>.hosts</name>
<value><%= node.hadoop_attrib(:core, :oozie_proxy_hosts) %></value>
</property>

<property>
<name>hadoop.proxyuser.<%= node.hadoop_attrib(:mapred, :cluster_administrators) %>.groups</name>
<value><%= node.hadoop_attrib(:mapred, :cluster_administrators) %></value>
</property>

</configuration>
